Uppgift 1
-----------------------------------------------------------------------------
Skriv en pseudokod som löser följande problem: Given en lista av N
positiva eller noll heltal, med varje heltal representerar den maximal
antal element som kan hoppas över.

Till exempel om listan är {1, 3, 5, 8, 6, 2, 6, 8, 8, 9}. Första hoppet 
är från första till andra element med värdet 3. Sedan hoppar vi tre element 
till höger d.v.s till femte element som har värdet 6. Därifrån kan vi 
nå sista element genom att hoppa 6 element (6<9).

Problemet är: Given en lista hitta den minimal antal hopp som
behöver för att nå sista element. Om det går inte att nå sista element
ska algoritm returnera -1. Ett element med noll värdet representera ett stop.
-----------------------------------------------------------------------------
START
    FUNCTION max(x, y)
        IF x > y THEN
            RETURN x
        ELSE
            RETURN y
        ENDIF
    END FUNCTION

    FUNCTION minJumps(list, lenghtOfList)
        IF lenghtOfList <= 1 THEN
            RETURN 0
        ENDIF
        
        IF list[0] == 0 THEN
            RETURN -1
        ENDIF
        
        SET maxReach to list[0]
        SET step to list[0]
        SET jump to 1

        FOR each index FROM 1 -> lenghtOfList DO:
            IF index == lenghtOfList - 1 THEN
                RETURN jump
            ENDIF
        
            SET maxReach to (CALL) max(maxReach, index + list[index])

            DECREMENT step

            IF step == 0 THEN
                INCREMENT jump
                IF index >= maxReach THEN
                    RETURN -1
                ENDIF
                SET step to maxReach - index
            ENDIF
        ENDFOR

        RETURN -1
    END FUNCTION

    SET list1 to {1, 3, 5, 8, 6, 2, 6, 8, 8, 9}
    SET size to the length of list1
    
    DISPLAY "Minimum jumps to reach end is: " CALL minJumps(list1, size)
STOP